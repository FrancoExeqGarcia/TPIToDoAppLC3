{"ast":null,"code":"var _jsxFileName = \"C:\\\\repos\\\\TPIToDoAppLC3\\\\todoapp\\\\src\\\\Components\\\\projectCard\\\\ProjectCard.js\";\nimport React from \"react\";\nimport { Card, Button, Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectCard({\n  project,\n  onDeleteProject,\n  onEditProject,\n  onMarkAsCompleted\n}) {\n  const handleEditClick = () => {\n    if (!project.isCompleted) {\n      onEditProject(project);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: project.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: [\"Fecha de Inicio: \", project.startDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: [\"Fecha de Finalizaci\\xF3n: \", project.endDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n        type: \"checkbox\",\n        label: \"Completada\",\n        checked: project.isCompleted,\n        onChange: () => {\n          onMarkAsCompleted(project.id);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"info\",\n        onClick: handleEditClick,\n        disabled: project.isCompleted,\n        children: \"Editar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"danger\",\n        onClick: onDeleteProject,\n        children: \"Eliminar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_c = ProjectCard;\nexport default ProjectCard;\nvar _c;\n$RefreshReg$(_c, \"ProjectCard\");","map":{"version":3,"names":["React","Card","Button","Form","jsxDEV","_jsxDEV","ProjectCard","project","onDeleteProject","onEditProject","onMarkAsCompleted","handleEditClick","isCompleted","children","Body","Title","name","fileName","_jsxFileName","lineNumber","columnNumber","Text","startDate","endDate","Check","type","label","checked","onChange","id","variant","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/repos/TPIToDoAppLC3/todoapp/src/Components/projectCard/ProjectCard.js"],"sourcesContent":["import React from \"react\";\r\nimport { Card, Button, Form } from \"react-bootstrap\";\r\n\r\nfunction ProjectCard({ project, onDeleteProject, onEditProject, onMarkAsCompleted }) {\r\n  const handleEditClick = () => {\r\n    if (!project.isCompleted) {\r\n      onEditProject(project);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Body>\r\n        <Card.Title>{project.name}</Card.Title>\r\n        <Card.Text>Fecha de Inicio: {project.startDate}</Card.Text>\r\n        <Card.Text>Fecha de Finalizaci√≥n: {project.endDate}</Card.Text>\r\n        <Form.Check\r\n          type=\"checkbox\"\r\n          label=\"Completada\"\r\n          checked={project.isCompleted}\r\n          onChange={() => {\r\n            onMarkAsCompleted(project.id);\r\n          }}\r\n        />\r\n        <Button\r\n          variant=\"info\"\r\n          onClick={handleEditClick}\r\n          disabled={project.isCompleted}\r\n        >\r\n          Editar\r\n        </Button>\r\n        <Button variant=\"danger\" onClick={onDeleteProject}>\r\n          Eliminar\r\n        </Button>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ProjectCard;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,MAAM,EAAEC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,WAAWA,CAAC;EAAEC,OAAO;EAAEC,eAAe;EAAEC,aAAa;EAAEC;AAAkB,CAAC,EAAE;EACnF,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAI,CAACJ,OAAO,CAACK,WAAW,EAAE;MACxBH,aAAa,CAACF,OAAO,CAAC;IACxB;EACF,CAAC;EAED,oBACEF,OAAA,CAACJ,IAAI;IAAAY,QAAA,eACHR,OAAA,CAACJ,IAAI,CAACa,IAAI;MAAAD,QAAA,gBACRR,OAAA,CAACJ,IAAI,CAACc,KAAK;QAAAF,QAAA,EAAEN,OAAO,CAACS;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eACvCf,OAAA,CAACJ,IAAI,CAACoB,IAAI;QAAAR,QAAA,GAAC,mBAAiB,EAACN,OAAO,CAACe,SAAS;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAC3Df,OAAA,CAACJ,IAAI,CAACoB,IAAI;QAAAR,QAAA,GAAC,4BAAuB,EAACN,OAAO,CAACgB,OAAO;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAC/Df,OAAA,CAACF,IAAI,CAACqB,KAAK;QACTC,IAAI,EAAC,UAAU;QACfC,KAAK,EAAC,YAAY;QAClBC,OAAO,EAAEpB,OAAO,CAACK,WAAY;QAC7BgB,QAAQ,EAAEA,CAAA,KAAM;UACdlB,iBAAiB,CAACH,OAAO,CAACsB,EAAE,CAAC;QAC/B;MAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACFf,OAAA,CAACH,MAAM;QACL4B,OAAO,EAAC,MAAM;QACdC,OAAO,EAAEpB,eAAgB;QACzBqB,QAAQ,EAAEzB,OAAO,CAACK,WAAY;QAAAC,QAAA,EAC/B;MAED;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTf,OAAA,CAACH,MAAM;QAAC4B,OAAO,EAAC,QAAQ;QAACC,OAAO,EAAEvB,eAAgB;QAAAK,QAAA,EAAC;MAEnD;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEX;AAACa,EAAA,GAlCQ3B,WAAW;AAoCpB,eAAeA,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}