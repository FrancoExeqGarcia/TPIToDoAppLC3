{"ast":null,"code":"var _jsxFileName = \"C:\\\\repos\\\\TPIToDoAppLC3\\\\todoapp\\\\src\\\\Components\\\\todoCard\\\\TodoCard.js\";\nimport React from \"react\";\nimport { Card, Button, Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoCard({\n  task,\n  onDeleteTask,\n  onEditTask,\n  onMarkAsCompleted\n}) {\n  const handleEditClick = () => {\n    if (!task.isCompleted) {\n      onEditTask(task, task.project);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: task.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: [\"Fecha de Inicio: \", task.startDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: [\"Fecha de Finalizaci\\xF3n: \", task.endDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n        type: \"checkbox\",\n        label: \"Completada\",\n        checked: task.isCompleted,\n        onChange: () => onMarkAsCompleted(task.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"info\",\n        onClick: handleEditClick,\n        disabled: task.isCompleted,\n        children: \"Editar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"danger\",\n        onClick: () => onDeleteTask(task),\n        children: \"Eliminar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_c = TodoCard;\nexport default TodoCard;\nvar _c;\n$RefreshReg$(_c, \"TodoCard\");","map":{"version":3,"names":["React","Card","Button","Form","jsxDEV","_jsxDEV","TodoCard","task","onDeleteTask","onEditTask","onMarkAsCompleted","handleEditClick","isCompleted","project","children","Body","Title","name","fileName","_jsxFileName","lineNumber","columnNumber","Text","startDate","endDate","Check","type","label","checked","onChange","id","variant","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/repos/TPIToDoAppLC3/todoapp/src/Components/todoCard/TodoCard.js"],"sourcesContent":["import React from \"react\";\r\nimport { Card, Button, Form } from \"react-bootstrap\";\r\n\r\nfunction TodoCard({ task, onDeleteTask, onEditTask, onMarkAsCompleted }) {\r\n  const handleEditClick = () => {\r\n    if (!task.isCompleted) {\r\n      onEditTask(task, task.project);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Body>\r\n        <Card.Title>{task.name}</Card.Title>\r\n        <Card.Text>Fecha de Inicio: {task.startDate}</Card.Text>\r\n        <Card.Text>Fecha de Finalizaci√≥n: {task.endDate}</Card.Text>\r\n        <Form.Check\r\n          type=\"checkbox\"\r\n          label=\"Completada\"\r\n          checked={task.isCompleted}\r\n          onChange={() => onMarkAsCompleted(task.id)}\r\n        />\r\n        <Button\r\n          variant=\"info\"\r\n          onClick={handleEditClick}\r\n          disabled={task.isCompleted}\r\n        >\r\n          Editar\r\n        </Button>\r\n        <Button variant=\"danger\" onClick={() => onDeleteTask(task)}>\r\n          Eliminar\r\n        </Button>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default TodoCard;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,MAAM,EAAEC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,QAAQA,CAAC;EAAEC,IAAI;EAAEC,YAAY;EAAEC,UAAU;EAAEC;AAAkB,CAAC,EAAE;EACvE,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAI,CAACJ,IAAI,CAACK,WAAW,EAAE;MACrBH,UAAU,CAACF,IAAI,EAAEA,IAAI,CAACM,OAAO,CAAC;IAChC;EACF,CAAC;EAED,oBACER,OAAA,CAACJ,IAAI;IAAAa,QAAA,eACHT,OAAA,CAACJ,IAAI,CAACc,IAAI;MAAAD,QAAA,gBACRT,OAAA,CAACJ,IAAI,CAACe,KAAK;QAAAF,QAAA,EAAEP,IAAI,CAACU;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eACpChB,OAAA,CAACJ,IAAI,CAACqB,IAAI;QAAAR,QAAA,GAAC,mBAAiB,EAACP,IAAI,CAACgB,SAAS;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACxDhB,OAAA,CAACJ,IAAI,CAACqB,IAAI;QAAAR,QAAA,GAAC,4BAAuB,EAACP,IAAI,CAACiB,OAAO;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAC5DhB,OAAA,CAACF,IAAI,CAACsB,KAAK;QACTC,IAAI,EAAC,UAAU;QACfC,KAAK,EAAC,YAAY;QAClBC,OAAO,EAAErB,IAAI,CAACK,WAAY;QAC1BiB,QAAQ,EAAEA,CAAA,KAAMnB,iBAAiB,CAACH,IAAI,CAACuB,EAAE;MAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC,eACFhB,OAAA,CAACH,MAAM;QACL6B,OAAO,EAAC,MAAM;QACdC,OAAO,EAAErB,eAAgB;QACzBsB,QAAQ,EAAE1B,IAAI,CAACK,WAAY;QAAAE,QAAA,EAC5B;MAED;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACThB,OAAA,CAACH,MAAM;QAAC6B,OAAO,EAAC,QAAQ;QAACC,OAAO,EAAEA,CAAA,KAAMxB,YAAY,CAACD,IAAI,CAAE;QAAAO,QAAA,EAAC;MAE5D;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEX;AAACa,EAAA,GAhCQ5B,QAAQ;AAkCjB,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}