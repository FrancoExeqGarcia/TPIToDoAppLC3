{"ast":null,"code":"var _jsxFileName = \"C:\\\\repos\\\\TPIToDoAppLC3\\\\todoapp\\\\src\\\\Components\\\\todoCard\\\\TodoCard.js\";\n// En TodoCard.js\nimport React from \"react\";\nimport { Card, Button, Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoCard({\n  task,\n  onDeleteTask,\n  onEditTask,\n  onMarkAsCompleted\n}) {\n  const handleEditClick = () => {\n    if (!task.isCompleted) {\n      onEditTask(task);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: task.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: [\"Fecha de Inicio: \", task.startDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: [\"Fecha de Finalizaci\\xF3n: \", task.endDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n        type: \"checkbox\",\n        label: \"Completada\",\n        checked: task.isCompleted,\n        onChange: () => {\n          onMarkAsCompleted(task.id); // Pasamos el ID de la tarea al marcarla como completada\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"info\",\n        onClick: handleEditClick,\n        disabled: task.isCompleted // Deshabilitar el botón de edición si la tarea está completada\n        ,\n        children: \"Editar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"danger\",\n        onClick: onDeleteTask,\n        children: \"Eliminar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_c = TodoCard;\nexport default TodoCard;\nvar _c;\n$RefreshReg$(_c, \"TodoCard\");","map":{"version":3,"names":["React","Card","Button","Form","jsxDEV","_jsxDEV","TodoCard","task","onDeleteTask","onEditTask","onMarkAsCompleted","handleEditClick","isCompleted","children","Body","Title","name","fileName","_jsxFileName","lineNumber","columnNumber","Text","startDate","endDate","Check","type","label","checked","onChange","id","variant","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/repos/TPIToDoAppLC3/todoapp/src/Components/todoCard/TodoCard.js"],"sourcesContent":["// En TodoCard.js\r\nimport React from \"react\";\r\nimport { Card, Button, Form } from \"react-bootstrap\";\r\n\r\nfunction TodoCard({ task, onDeleteTask, onEditTask, onMarkAsCompleted }) {\r\n  const handleEditClick = () => {\r\n    if (!task.isCompleted) {\r\n      onEditTask(task);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Body>\r\n        <Card.Title>{task.name}</Card.Title>\r\n        <Card.Text>Fecha de Inicio: {task.startDate}</Card.Text>\r\n        <Card.Text>Fecha de Finalización: {task.endDate}</Card.Text>\r\n        <Form.Check\r\n          type=\"checkbox\"\r\n          label=\"Completada\"\r\n          checked={task.isCompleted}\r\n          onChange={() => {\r\n            onMarkAsCompleted(task.id); // Pasamos el ID de la tarea al marcarla como completada\r\n          }}\r\n        />\r\n        <Button\r\n          variant=\"info\"\r\n          onClick={handleEditClick}\r\n          disabled={task.isCompleted} // Deshabilitar el botón de edición si la tarea está completada\r\n        >\r\n          Editar\r\n        </Button>\r\n        <Button variant=\"danger\" onClick={onDeleteTask}>\r\n          Eliminar\r\n        </Button>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default TodoCard;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,MAAM,EAAEC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,QAAQA,CAAC;EAAEC,IAAI;EAAEC,YAAY;EAAEC,UAAU;EAAEC;AAAkB,CAAC,EAAE;EACvE,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAI,CAACJ,IAAI,CAACK,WAAW,EAAE;MACrBH,UAAU,CAACF,IAAI,CAAC;IAClB;EACF,CAAC;EAED,oBACEF,OAAA,CAACJ,IAAI;IAAAY,QAAA,eACHR,OAAA,CAACJ,IAAI,CAACa,IAAI;MAAAD,QAAA,gBACRR,OAAA,CAACJ,IAAI,CAACc,KAAK;QAAAF,QAAA,EAAEN,IAAI,CAACS;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eACpCf,OAAA,CAACJ,IAAI,CAACoB,IAAI;QAAAR,QAAA,GAAC,mBAAiB,EAACN,IAAI,CAACe,SAAS;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACxDf,OAAA,CAACJ,IAAI,CAACoB,IAAI;QAAAR,QAAA,GAAC,4BAAuB,EAACN,IAAI,CAACgB,OAAO;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAC5Df,OAAA,CAACF,IAAI,CAACqB,KAAK;QACTC,IAAI,EAAC,UAAU;QACfC,KAAK,EAAC,YAAY;QAClBC,OAAO,EAAEpB,IAAI,CAACK,WAAY;QAC1BgB,QAAQ,EAAEA,CAAA,KAAM;UACdlB,iBAAiB,CAACH,IAAI,CAACsB,EAAE,CAAC,CAAC,CAAC;QAC9B;MAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACFf,OAAA,CAACH,MAAM;QACL4B,OAAO,EAAC,MAAM;QACdC,OAAO,EAAEpB,eAAgB;QACzBqB,QAAQ,EAAEzB,IAAI,CAACK,WAAY,CAAC;QAAA;QAAAC,QAAA,EAC7B;MAED;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTf,OAAA,CAACH,MAAM;QAAC4B,OAAO,EAAC,QAAQ;QAACC,OAAO,EAAEvB,YAAa;QAAAK,QAAA,EAAC;MAEhD;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEX;AAACa,EAAA,GAlCQ3B,QAAQ;AAoCjB,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}