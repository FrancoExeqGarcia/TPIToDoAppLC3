{"ast":null,"code":"var _jsxFileName = \"C:\\\\repos\\\\TPIToDoAppLC3\\\\todoapp\\\\src\\\\Components\\\\projects\\\\Projects.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport ProjectCard from \"../projectCard/ProjectCard\";\nimport EditProject from \"../editProject/EditProject\"; // Importa el nuevo componente EditProject\nimport AddNewProject from \"../addNewProject/AddNewProject\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Projects() {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [editingProjects, setEditingProject] = useState(null);\n  const addProject = newProject => {\n    setProjects([...projects, newProject]);\n  };\n  const deleteProject = index => {\n    const updatedProjects = [...projects];\n    updatedProjects.splice(index, 1);\n    setProjects(updatedProjects);\n  };\n  const editProject = project => {\n    if (!project.isCompleted) {\n      setEditingProject(project);\n    }\n  };\n  const saveEditedProject = editedProject => {\n    const updatedProjects = projects.map(project => project.id === editedProject.id ? editedProject : project);\n    setProjects(updatedProjects);\n    setEditingProject(null);\n  };\n  const cancelEdit = () => {\n    setEditingProject(null);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mt-5\",\n      children: \"Proyectos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddNewProject, {\n      onAddProject: addProject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mt-4\",\n      children: projects.map((project, index) => /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        md: 6,\n        lg: 4,\n        className: \"mb-3\",\n        children: editingProjects === project ? /*#__PURE__*/_jsxDEV(EditProject, {\n          project: project,\n          onUpdateProject: saveEditedProject,\n          onCancel: cancelEdit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(ProjectCard, {\n          project: project,\n          onDeleteProject: () => deleteProject(index),\n          onEditProject: editProject\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Projects, \"Cuzd9AnTCt1K8FfxRe/OOhX/XQI=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","Container","Row","Col","ProjectCard","EditProject","AddNewProject","jsxDEV","_jsxDEV","Projects","_s","projects","setProjects","editingProjects","setEditingProject","addProject","newProject","deleteProject","index","updatedProjects","splice","editProject","project","isCompleted","saveEditedProject","editedProject","map","id","cancelEdit","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onAddProject","xs","md","lg","onUpdateProject","onCancel","onDeleteProject","onEditProject","_c","$RefreshReg$"],"sources":["C:/repos/TPIToDoAppLC3/todoapp/src/Components/projects/Projects.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport ProjectCard from \"../projectCard/ProjectCard\";\r\nimport EditProject from \"../editProject/EditProject\"; // Importa el nuevo componente EditProject\r\nimport AddNewProject from \"../addNewProject/AddNewProject\";\r\n\r\nfunction Projects() {\r\n  const [projects, setProjects] = useState([]);\r\n  const [editingProjects, setEditingProject] = useState(null);\r\n\r\n  const addProject = (newProject) => {\r\n    setProjects([...projects, newProject]);\r\n  };\r\n\r\n  const deleteProject = (index) => {\r\n    const updatedProjects = [...projects];\r\n    updatedProjects.splice(index, 1);\r\n    setProjects(updatedProjects);\r\n  };\r\n\r\n  const editProject = (project) => {\r\n    if (!project.isCompleted) {\r\n      setEditingProject(project);\r\n    }\r\n  };\r\n\r\n  const saveEditedProject = (editedProject) => {\r\n    const updatedProjects = projects.map((project) =>\r\n      project.id === editedProject.id ? editedProject : project\r\n    );\r\n    setProjects(updatedProjects);\r\n    setEditingProject(null);\r\n  };\r\n\r\n  const cancelEdit = () => {\r\n    setEditingProject(null);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h1 className=\"mt-5\">Proyectos</h1>\r\n\r\n      <AddNewProject onAddProject={addProject} />\r\n\r\n      <Row className=\"mt-4\">\r\n        {projects.map((project, index) => (\r\n          <Col key={index} xs={12} md={6} lg={4} className=\"mb-3\">\r\n            {editingProjects === project ? (\r\n              <EditProject\r\n                project={project}\r\n                onUpdateProject={saveEditedProject}\r\n                onCancel={cancelEdit}\r\n              />\r\n            ) : (\r\n              <ProjectCard\r\n                project={project}\r\n                onDeleteProject={() => deleteProject(index)}\r\n                onEditProject={editProject}\r\n              />\r\n            )}\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Projects;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AACrD,OAAOC,WAAW,MAAM,4BAA4B;AACpD,OAAOC,WAAW,MAAM,4BAA4B,CAAC,CAAC;AACtD,OAAOC,aAAa,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,eAAe,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAE3D,MAAMe,UAAU,GAAIC,UAAU,IAAK;IACjCJ,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEK,UAAU,CAAC,CAAC;EACxC,CAAC;EAED,MAAMC,aAAa,GAAIC,KAAK,IAAK;IAC/B,MAAMC,eAAe,GAAG,CAAC,GAAGR,QAAQ,CAAC;IACrCQ,eAAe,CAACC,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;IAChCN,WAAW,CAACO,eAAe,CAAC;EAC9B,CAAC;EAED,MAAME,WAAW,GAAIC,OAAO,IAAK;IAC/B,IAAI,CAACA,OAAO,CAACC,WAAW,EAAE;MACxBT,iBAAiB,CAACQ,OAAO,CAAC;IAC5B;EACF,CAAC;EAED,MAAME,iBAAiB,GAAIC,aAAa,IAAK;IAC3C,MAAMN,eAAe,GAAGR,QAAQ,CAACe,GAAG,CAAEJ,OAAO,IAC3CA,OAAO,CAACK,EAAE,KAAKF,aAAa,CAACE,EAAE,GAAGF,aAAa,GAAGH,OACpD,CAAC;IACDV,WAAW,CAACO,eAAe,CAAC;IAC5BL,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,MAAMc,UAAU,GAAGA,CAAA,KAAM;IACvBd,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,oBACEN,OAAA,CAACP,SAAS;IAAA4B,QAAA,gBACRrB,OAAA;MAAIsB,SAAS,EAAC,MAAM;MAAAD,QAAA,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEnC1B,OAAA,CAACF,aAAa;MAAC6B,YAAY,EAAEpB;IAAW;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE3C1B,OAAA,CAACN,GAAG;MAAC4B,SAAS,EAAC,MAAM;MAAAD,QAAA,EAClBlB,QAAQ,CAACe,GAAG,CAAC,CAACJ,OAAO,EAAEJ,KAAK,kBAC3BV,OAAA,CAACL,GAAG;QAAaiC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAACR,SAAS,EAAC,MAAM;QAAAD,QAAA,EACpDhB,eAAe,KAAKS,OAAO,gBAC1Bd,OAAA,CAACH,WAAW;UACViB,OAAO,EAAEA,OAAQ;UACjBiB,eAAe,EAAEf,iBAAkB;UACnCgB,QAAQ,EAAEZ;QAAW;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CAAC,gBAEF1B,OAAA,CAACJ,WAAW;UACVkB,OAAO,EAAEA,OAAQ;UACjBmB,eAAe,EAAEA,CAAA,KAAMxB,aAAa,CAACC,KAAK,CAAE;UAC5CwB,aAAa,EAAErB;QAAY;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B;MACF,GAbOhB,KAAK;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAcV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB;AAACxB,EAAA,CA3DQD,QAAQ;AAAAkC,EAAA,GAARlC,QAAQ;AA6DjB,eAAeA,QAAQ;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}